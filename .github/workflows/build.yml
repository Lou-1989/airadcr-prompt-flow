name: 'Build AIRADCR'

on:
  workflow_dispatch:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  release:
    types: [ published ]

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.settings.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.settings.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev patchelf

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm ci

      - name: Build all required icons (robust)
        run: node scripts/build-icons-robust.cjs

      - name: Validate all icons and assets  
        run: node scripts/validate-icons.cjs

      - name: Build the app
        run: npx tauri build ${{ matrix.settings.args }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug bundle contents (Windows)
        if: matrix.settings.platform == 'windows-latest'
        run: |
          echo "Listing Windows bundle directory contents:"
          if (Test-Path "src-tauri/target/release/bundle/") { Get-ChildItem -Path "src-tauri/target/release/bundle/" -Recurse } else { echo "Bundle directory not found" }
          Get-ChildItem -Path "src-tauri/target/" -Include "*.exe","*.msi" -Recurse -ErrorAction SilentlyContinue
        shell: powershell

      - name: Debug bundle contents (Unix)
        if: matrix.settings.platform != 'windows-latest'
        run: |
          echo "Listing bundle directory contents:"
          ls -la src-tauri/target/release/bundle/ || echo "Bundle directory not found"
          find src-tauri/target/ -name "*.exe" -o -name "*.msi" -o -name "*.dmg" -o -name "*.deb" -o -name "*.AppImage" || echo "No build artifacts found"

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        if: matrix.settings.platform == 'windows-latest'
        with:
          name: build-windows-latest
          path: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/nsis/*.exe
            src-tauri/target/release/*.exe
          retention-days: 30

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        if: matrix.settings.platform == 'macos-latest'
        with:
          name: build-macos-${{ contains(matrix.settings.args, 'aarch64') && 'arm64' || 'intel' }}
          path: |
            src-tauri/target/*/release/bundle/dmg/*.dmg
            src-tauri/target/*/release/bundle/macos/*.app
          retention-days: 30

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        if: matrix.settings.platform == 'ubuntu-22.04'
        with:
          name: build-ubuntu-22.04
          path: |
            src-tauri/target/release/bundle/deb/*.deb
            src-tauri/target/release/bundle/appimage/*.AppImage
          retention-days: 30